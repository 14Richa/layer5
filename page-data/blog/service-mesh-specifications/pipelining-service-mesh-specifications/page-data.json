{"componentChunkName":"component---src-templates-blog-single-js","path":"/blog/service-mesh-specifications/pipelining-service-mesh-specifications","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Pipelining Service Mesh Specifications\",\n  \"subtitle\": \"Using SMI and SMP specs on your CI/CD pipelines with Meshery's GitHub Actions\",\n  \"date\": \"2021-10-01 10:30:05 -0530\",\n  \"author\": \"Navendu Pottekkat\",\n  \"thumbnail\": \"./service-mesh-specifications.png\",\n  \"category\": \"Service Mesh Specifications\",\n  \"tags\": [\"SMI\", \"SMP\", \"Meshery\"],\n  \"published\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(BlogWrapper, {\n    mdxType: \"BlogWrapper\"\n  }, mdx(\"p\", null, \"With growing adoption of service meshes in cloud native environments, service mesh abstractions - service mesh-neutral specifications - have emerged.  The \", mdx(Link, {\n    to: \"/projects/service-mesh-interface-conformance\",\n    mdxType: \"Link\"\n  }, \"Service Mesh Interface\"), \" and the \", mdx(Link, {\n    to: \"/projects/service-mesh-performance\",\n    mdxType: \"Link\"\n  }, \"Service Mesh Performance\"), \" are two open specifications that address the need for universal interfaces for interacting with and managing any type of service mesh.\"), mdx(\"p\", null, \"Let\\u2019s examine what each specification provides.\"), mdx(\"p\", null, \"The \", mdx(Link, {\n    to: \"https://smi-spec.io\",\n    mdxType: \"Link\"\n  }, \"Service Mesh Interface\"), \" specification provides a standard interface for service meshes on Kubernetes. These (currently) four specfications offer a common denominator set of interfaces to support most common service mesh use cases and the flexibility to evolve to support new service mesh capabilities over time.\"), mdx(\"p\", null, \"The \", mdx(Link, {\n    to: \"https://smp-spec.io\",\n    mdxType: \"Link\"\n  }, \"Service Mesh Performance\"), \" specification standardizes service mesh value measurement, characterizing any deployment's performance by capturing the details of infrastructure capacity, service mesh configuration and workload metadata.\"), mdx(\"p\", null, \"As a service mesh agnostic tool that provides lifecycle and performance management of a large number of (10+) service meshes, sample applications, service mesh patterns and WebAssembly filters, Meshery is the ideal tool for the job when it comes to implementing these specifications.\"), mdx(\"p\", null, \"Meshery also comes with 2 new GitHub Actions that do exactly this. The \", mdx(Link, {\n    to: \"https://github.com/layer5io/meshery-smi-conformance-action\",\n    mdxType: \"Link\"\n  }, \"Meshery SMI Conformance Action\"), \" which \", mdx(Link, {\n    to: \"https://meshery.io/blog/validating-smi-conformance-with-meshery\",\n    mdxType: \"Link\"\n  }, \"validates SMI conformance\"), \" in your pipeline and the \", mdx(Link, {\n    to: \"https://github.com/layer5io/meshery-smp-action\",\n    mdxType: \"Link\"\n  }, \"Meshery SMP Action\"), \" which runs \", mdx(Link, {\n    to: \"https://docs.meshery.io/functionality/performance-management\",\n    mdxType: \"Link\"\n  }, \"SMP compatible performance benchmarks\"), \".\"), mdx(\"p\", null, \"But how do we use these actions? What do they offer? Let\\u2019s find out!\"), mdx(\"h2\", null, \"Meshery SMI Conformance Action\"), mdx(\"p\", null, \"Conformance of SMI specifications are defined as a series of test assertions. These test assertions are categorised by SMI specification and comprise the complete suite of SMI conformance tests. The conformance requirements will change appropriately as each new version of the SMI spec is released.\"), mdx(\"p\", null, mdx(Link, {\n    to: \"https://docs.meshery.io/functionality/service-mesh-interface\",\n    mdxType: \"Link\"\n  }, \"Read more\"), \" about Meshery and SMI conformance.\"), mdx(\"h3\", null, \"Using the GitHub Action\"), mdx(\"p\", null, \"You can get the action from \", mdx(Link, {\n    to: \"https://github.com/marketplace/actions/service-mesh-interface-conformance-with-meshery\",\n    mdxType: \"Link\"\n  }, \"GitHub Marketplace\"), \".\"), mdx(\"p\", null, \"You can configure this action to run on releases or on every pull request.\"), mdx(\"p\", null, \"An example of the action configuration which runs on every release is shown below. The action handles setting up a Kubernetes environment, deploying the service mesh (see supported service meshes), running the conformance tests and reporting back the results to the SMI Conformance dashboard in Meshery.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\"\n  }, \"name: SMI Conformance with Meshery\\non:\\n  push:\\n    tags:\\n      - 'v*'\\n\\njobs:\\n  smi-conformance:\\n    name: SMI Conformance\\n    runs-on: ubuntu-latest\\n    steps:\\n\\n      - name: SMI conformance tests\\n        uses: layer5io/mesheryctl-smi-conformance-action@master\\n        with:\\n          provider_token: ${{ secrets.MESHERY_PROVIDER_TOKEN }}\\n          service_mesh: open_service_mesh\\n          mesh_deployed: false\\n\")), mdx(\"p\", null, \"Users can also bring in their own cluster with specific capabilities and with a service mesh already installed.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\"\n  }, \"name: SMI Conformance with Meshery\\non:\\n  push:\\n    branches:\\n      - 'master'\\n\\njobs:\\n  smi-conformance:\\n    name: SMI Conformance tests on master\\n    runs-on: ubuntu-latest\\n    steps:\\n\\n      - name: Deploy k8s-minikube\\n        uses: manusa/actions-setup-minikube@v2.4.1\\n        with:\\n          minikube version: 'v1.21.0'\\n          kubernetes version: 'v1.20.7'\\n          driver: docker\\n\\n      - name: Install OSM\\n        run: |\\n           curl -LO https://github.com/openservicemesh/osm/releases/download/v0.9.1/osm-v0.9.1-linux-amd64.tar.gz\\n           tar -xzf osm-v0.9.1-linux-amd64.tar.gz\\n           mkdir -p ~/osm/bin\\n           mv ./linux-amd64/osm ~/osm/bin/osm-bin\\n           PATH=\\\"$PATH:$HOME/osm/bin/\\\"\\n           osm-bin install --osm-namespace default\\n\\n      - name: SMI conformance tests\\n        uses: layer5io/mesheryctl-smi-conformance-action@master\\n        with:\\n          provider_token: ${{ secrets.MESHERY_PROVIDER_TOKEN }}\\n          service_mesh: open_service_mesh\\n          mesh_deployed: true\\n\")), mdx(\"div\", {\n    style: {\n      \"display\": \"flex\",\n      \"width\": \"100%\",\n      \"alignItems\": \"center\",\n      \"paddingBottom\": \"40px\"\n    }\n  }, mdx(\"div\", {\n    style: {\n      \"textAlign\": \"center\",\n      \"flex\": \"65%\"\n    }\n  }, mdx(\"img\", {\n    src: token,\n    className: \"image-center\",\n    alt: \"token download\"\n  })), mdx(\"div\", {\n    style: {\n      \"flex\": \"35%\"\n    }\n  }, mdx(\"p\", null, \"Users can download a token from Meshery and add it as a GitHub secret (in the example above, the secret is MESHERY_PROVIDER_TOKEN).\"))), mdx(\"div\", {\n    style: {\n      \"display\": \"flex\",\n      \"width\": \"100%\",\n      \"alignItems\": \"center\",\n      \"paddingBottom\": \"20px\"\n    }\n  }, mdx(\"div\", {\n    style: {\n      \"flex\": \"35%\"\n    }\n  }, mdx(\"p\", null, \"After the test is run, you can view the results from the Service Mesh Interface dashboard in Meshery UI.\")), mdx(\"div\", {\n    style: {\n      \"textAlign\": \"center\",\n      \"flex\": \"65%\"\n    }\n  }, mdx(\"img\", {\n    src: smidashboard,\n    className: \"image-center\",\n    alt: \"smi conformance dashboard\"\n  }))), mdx(\"p\", null, \"Participating service mesh projects can also \", mdx(Link, {\n    to: \"https://docs.meshery.io/functionality/service-mesh-interface#reporting-conformance\",\n    mdxType: \"Link\"\n  }, \"automatically report their conformance test results\"), \" to the \", mdx(Link, {\n    to: \"https://meshery.io/service-mesh-interface\",\n    mdxType: \"Link\"\n  }, \"SMI Conformance dashboard\")), mdx(\"h2\", null, \"Meshery SMP Action\"), mdx(\"p\", null, \"Measuring and managing the performance of a service mesh is key to efficient operation of any service mesh.\"), mdx(\"p\", null, \"Meshery is the canonical implementation of the Service Mesh Performance specification. Users can choose from multiple load generators and use a highly configurable set of load profiles with variable tunable facets to run a performance test.\"), mdx(\"p\", null, \"Meshery packages all these features into an easy-to-use GitHub Action.\"), mdx(\"h3\", null, \"Using the GitHub Action\"), mdx(\"p\", null, \"The Meshery SMP Action is available in the \", mdx(Link, {\n    to: \"https://github.com/marketplace/actions/performance-testing-with-meshery\",\n    mdxType: \"Link\"\n  }, \"GitHub Marketplace\"), \".\"), mdx(\"p\", null, \"Users can create their own performance profiles to run repeatable tests with Meshery.\"), mdx(\"p\", null, \"A sample configuration of the action is shown below.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\"\n  }, \"name: Meshery SMP Action\\non:\\n  push:\\n    branches:\\n      'master'\\n\\njobs:\\n  performance-test:\\n    name: Performance Test\\n    runs-on: ubuntu-latest\\n    steps:\\n      - name: checkout\\n        uses: actions/checkout@v2\\n        with:\\n          ref: 'perf'\\n\\n      - name: Deploy k8s-minikube\\n        uses: manusa/actions-setup-minikube@v2.4.1\\n        with:\\n          minikube version: 'v1.21.0'\\n          kubernetes version: 'v1.20.7'\\n          driver: docker\\n\\n      - name: Run Performance Test\\n        uses: layer5io/meshery-smp-action@master\\n        with:\\n          provider_token: ${{ secrets.PROVIDER_TOKEN }}\\n          platform: docker\\n          profile_name: soak-test\\n\")), mdx(\"p\", null, \"Users can also define their test configuration in an SMP compatible configuration file as shown below.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\"\n  }, \"smp_version: v0.0.1\\nid:\\nname: Istio Performance Test\\nlabels: {}\\nclients:\\n- internal: false\\n  load_generator: fortio\\n  protocol: 1\\n  connections: 2\\n  rps: 10\\n  headers: {}\\n  cookies: {}\\n  body: \\\"\\\"\\n  content_type: \\\"\\\"\\n  endpoint_urls:\\n  - http://localhost:2323/productpage\\nduration: \\\"30m\\\"\\n\")), mdx(\"p\", null, \"See \", mdx(Link, {\n    to: \"https://github.com/layer5io/meshery-smp-action/blob/master/action.yml\",\n    mdxType: \"Link\"\n  }, \"action.yml\"), \" for more configuration details.\"), mdx(\"div\", {\n    style: {\n      \"display\": \"flex\",\n      \"width\": \"100%\",\n      \"alignItems\": \"center\",\n      \"paddingBottom\": \"20px\"\n    }\n  }, mdx(\"div\", {\n    style: {\n      \"textAlign\": \"center\",\n      \"flex\": \"65%\"\n    }\n  }, mdx(\"img\", {\n    src: perfdashboard,\n    className: \"image-center\",\n    alt: \"performance management dashboard\"\n  })), mdx(\"div\", {\n    style: {\n      \"flex\": \"35%\"\n    }\n  }, mdx(\"p\", null, \"The results from the tests are updated on the Performance Management dashboard in Meshery.\"))), mdx(\"p\", null, \"To know more about interpreting the test results, check out \", mdx(Link, {\n    to: \"https://docs.meshery.io/guides/interpreting-performance-test-results\",\n    mdxType: \"Link\"\n  }, \"this guide\"), \".\"), mdx(\"p\", null, \"You can always check out the \", mdx(Link, {\n    to: \"https://docs.meshery.io/guides\",\n    mdxType: \"Link\"\n  }, \"Meshery usage guides\"), \" to dive deep into these features.\"), mdx(\"p\", null, \"Stay meshy!\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Pipelining Service Mesh Specifications","subtitle":"Using SMI and SMP specs on your CI/CD pipelines with Meshery's GitHub Actions","date":"October 1st, 2021","author":"Navendu Pottekkat","category":"Service Mesh Specifications","tags":["SMI","SMP","Meshery"],"thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/5b600da7430f33af77e85fecca9d16cf/86bab/service-mesh-specifications.png","srcSet":"/static/5b600da7430f33af77e85fecca9d16cf/e1b03/service-mesh-specifications.png 125w,\n/static/5b600da7430f33af77e85fecca9d16cf/81b70/service-mesh-specifications.png 250w,\n/static/5b600da7430f33af77e85fecca9d16cf/86bab/service-mesh-specifications.png 500w,\n/static/5b600da7430f33af77e85fecca9d16cf/8cf60/service-mesh-specifications.png 1000w","sizes":"(min-width: 500px) 500px, 100vw"},"sources":[{"srcSet":"/static/5b600da7430f33af77e85fecca9d16cf/46142/service-mesh-specifications.webp 125w,\n/static/5b600da7430f33af77e85fecca9d16cf/81c3e/service-mesh-specifications.webp 250w,\n/static/5b600da7430f33af77e85fecca9d16cf/cd07d/service-mesh-specifications.webp 500w,\n/static/5b600da7430f33af77e85fecca9d16cf/bf95e/service-mesh-specifications.webp 1000w","type":"image/webp","sizes":"(min-width: 500px) 500px, 100vw"}]},"width":500,"height":281}},"extension":"png","publicURL":"/static/5b600da7430f33af77e85fecca9d16cf/service-mesh-specifications.png"}},"fields":{"slug":"/blog/service-mesh-specifications/pipelining-service-mesh-specifications"}}},"pageContext":{"slug":"/blog/service-mesh-specifications/pipelining-service-mesh-specifications"}},"staticQueryHashes":["112401468","1485533831","4047814605","78753834","7929417"]}